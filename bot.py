# File: bot.py

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram.constants import ParseMode

# info.py ‡§î‡§∞ script.py ‡§∏‡•á ‡§µ‡•á‡§∞‡§ø‡§è‡§¨‡§≤‡•ç‡§∏ ‡§á‡§Æ‡•ç‡§™‡•ã‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç
from info import BOT_TOKEN, PHOTO_URL, CHANNEL_LINK
from script import START_TXT

# ‡§≤‡•â‡§ó‡§ø‡§Ç‡§ó ‡§∏‡•á‡§ü‡§Ö‡§™ (‡§è‡§∞‡§∞ ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è)
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# /start ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    
    # ‡§á‡§®‡§≤‡§æ‡§á‡§® ‡§¨‡§ü‡§® ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è
    keyboard = [
        [InlineKeyboardButton("‡§Æ‡•á‡§∞‡§æ ‡§ö‡•à‡§®‡§≤ üöÄ", url=CHANNEL_LINK)],
        [InlineKeyboardButton("‡§°‡•á‡§µ‡§≤‡§™‡§∞ ‡§∏‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç üßë‚Äçüíª", url="https://t.me/YourUsername")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # START_TXT ‡§Æ‡•á‡§Ç ‡§Ø‡•Ç‡§ú‡§∞ ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§ú‡•ã‡§°‡§º‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è
    text = START_TXT.format(mention=user.mention_html())
    
    # ‡§´‡•ã‡§ü‡•ã, ‡§Æ‡•à‡§∏‡•á‡§ú ‡§î‡§∞ ‡§¨‡§ü‡§® ‡§è‡§ï ‡§∏‡§æ‡§• ‡§≠‡•á‡§ú‡§®‡§æ
    await update.message.reply_photo(
        photo=PHOTO_URL,
        caption=text,
        reply_markup=reply_markup,
        parse_mode=ParseMode.HTML
    )

# ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
def main() -> None:
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    
    logger.info("‡§¨‡•â‡§ü ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à...")
    application.run_polling()

if __name__ == '__main__':
    main()
    
