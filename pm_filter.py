# pm_filter.py

import asyncio
from pyrogram import Client, filters
from pyrogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.errors import FloodWait

from info import ADMINS
from database import db # ‡§π‡§Æ ‡§Ø‡§π ‡§´‡§æ‡§á‡§≤ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§¨‡§®‡§æ‡§è‡§Ç‡§ó‡•á

# ‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏‡§ø‡§Ç‡§ó ‡§∏‡•ç‡§ü‡•á‡§ü‡§∏ ‡§ï‡•ã ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è
indexing_status = {}

@Client.on_message(filters.command("index") & filters.user(ADMINS) & filters.private)
async def index_files(bot, message: Message):
    """
    ‡§ú‡§¨ ‡§è‡§°‡§Æ‡§ø‡§® ‡§ï‡§ø‡§∏‡•Ä ‡§ö‡•à‡§®‡§≤ ‡§∏‡•á ‡§´‡§æ‡§á‡§≤ ‡§´‡•â‡§∞‡§µ‡§∞‡•ç‡§° ‡§ï‡§∞‡§ï‡•á /index ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§
    """
    if len(message.command) < 2:
        return await message.reply_text("‡§ï‡•É‡§™‡§Ø‡§æ ‡§´‡•â‡§∞‡§µ‡§∞‡•ç‡§° ‡§ï‡§ø‡§è ‡§ó‡§è ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n`/index channel_id`")

    try:
        channel_id = int(message.command[1])
    except ValueError:
        return await message.reply_text("‡§Ö‡§µ‡•à‡§ß ‡§ö‡•à‡§®‡§≤ ‡§Ü‡§à‡§°‡•Ä‡•§")

    # ‡§™‡•ç‡§∞‡§æ‡§∞‡§Ç‡§≠‡§ø‡§ï ‡§Æ‡•à‡§∏‡•á‡§ú
    msg = await message.reply_text(f"‡§ö‡•à‡§®‡§≤ `({channel_id})` ‡§∏‡•á ‡§´‡§æ‡§á‡§≤‡•ã‡§Ç ‡§ï‡•ã ‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏ ‡§ï‡§∞‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...")
    
    total_files = await bot.get_chat_history_count(channel_id)
    
    # ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü ‡§¨‡§ü‡§® ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Æ‡•à‡§∏‡•á‡§ú
    await msg.edit(
        f"‡§ö‡•à‡§®‡§≤ ‡§Æ‡•á‡§Ç ‡§ï‡•Å‡§≤ **{total_files}** ‡§´‡§æ‡§á‡§≤‡•á‡§Ç ‡§Æ‡§ø‡§≤‡•Ä‡§Ç‡•§\n‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("üöÄ ‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç", callback_data=f"start_index_{channel_id}")]]
        )
    )

@Client.on_callback_query(filters.regex(r"^start_index_"))
async def start_indexing_callback(bot, query):
    """
    '‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç' ‡§¨‡§ü‡§® ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡•ã ‡§π‡•à‡§Ç‡§°‡§≤ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§
    """
    if query.from_user.id not in ADMINS:
        return await query.answer("‡§Ø‡§π ‡§Ü‡§™‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à!", show_alert=True)

    channel_id = int(query.data.split("_")[2])
    
    await query.message.edit(f"`{channel_id}` ‡§∏‡•á ‡§´‡§æ‡§á‡§≤‡•á‡§Ç ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡•Ä ‡§ú‡§æ ‡§∞‡§π‡•Ä ‡§π‡•à‡§Ç...")
    
    # ‡§∏‡•ç‡§ü‡•á‡§ü‡§∏ ‡§ï‡•ã ‡§∞‡•Ä‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
    indexing_status[channel_id] = {
        'received': 0,
        'saved': 0,
        'duplicate': 0,
        'unsupported': 0,
        'total': await bot.get_chat_history_count(channel_id)
    }

    try:
        # ‡§ö‡•à‡§®‡§≤ ‡§∏‡•á ‡§∏‡§≠‡•Ä ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡•ã ‡§á‡§ü‡§∞‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
        async for msg in bot.get_chat_history(channel_id):
            status = indexing_status[channel_id]
            status['received'] += 1
            
            # ‡§π‡§∞ 100 ‡§´‡§æ‡§á‡§≤ ‡§™‡§∞ ‡§∏‡•ç‡§ü‡•á‡§ü‡§∏ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
            if status['received'] % 100 == 0:
                text = (
                    f"**‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏‡§ø‡§Ç‡§ó ‡§™‡•ç‡§∞‡§ó‡§§‡§ø:**\n\n"
                    f"‡§ï‡•Å‡§≤ ‡§´‡§æ‡§á‡§≤‡•á‡§Ç: {status['total']}\n"
                    f"‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§: {status['received']}\n"
                    f"‡§∏‡•á‡§µ ‡§ï‡•Ä ‡§ó‡§à‡§Ç: {status['saved']}\n"
                    f"‡§°‡•Å‡§™‡•ç‡§≤‡§ø‡§ï‡•á‡§ü: {status['duplicate']}\n"
                    f"‡§Ö‡§∏‡§Æ‡§∞‡•ç‡§•‡§ø‡§§: {status['unsupported']}"
                )
                try:
                    await query.message.edit(text)
                except FloodWait as e:
                    await asyncio.sleep(e.x)

            # ‡§Ö‡§ó‡§∞ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§Æ‡•á‡§Ç ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ (‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã, ‡§°‡•â‡§ï‡•ç‡§Ø‡•Ç‡§Æ‡•á‡§Ç‡§ü, ‡§ë‡§°‡§ø‡§Ø‡•ã) ‡§π‡•à
            if msg.media:
                media = getattr(msg, msg.media.value, None)
                if media and hasattr(media, 'file_id'):
                    file_id = media.file_id
                    file_name = getattr(media, 'file_name', 'N/A')
                    caption = msg.caption if msg.caption else ""

                    # MongoDB ‡§Æ‡•á‡§Ç ‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç
                    saved, duplicate = await db.add_file({
                        '_id': file_id,
                        'file_name': file_name,
                        'caption': caption,
                        'file_size': media.file_size,
                        'chat_id': msg.chat.id,
                        'message_id': msg.id
                    })

                    if saved:
                        status['saved'] += 1
                    elif duplicate:
                        status['duplicate'] += 1
                else:
                    status['unsupported'] += 1
            else:
                status['unsupported'] += 1

        # ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§∏‡•ç‡§ü‡•á‡§ü‡§∏
        status = indexing_status[channel_id]
        await query.message.edit(
            f"**‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏‡§ø‡§Ç‡§ó ‡§™‡•Ç‡§∞‡•Ä ‡§π‡•Å‡§à!**\n\n"
            f"‡§ï‡•Å‡§≤ ‡§´‡§æ‡§á‡§≤‡•á‡§Ç: {status['total']}\n"
            f"‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§: {status['received']}\n"
            f"‡§∏‡•á‡§µ ‡§ï‡•Ä ‡§ó‡§à‡§Ç: {status['saved']}\n"
            f"‡§°‡•Å‡§™‡•ç‡§≤‡§ø‡§ï‡•á‡§ü: {status['duplicate']}\n"
            f"‡§Ö‡§∏‡§Æ‡§∞‡•ç‡§•‡§ø‡§§: {status['unsupported']}"
        )

    except Exception as e:
        await query.message.edit(f"‡§è‡§ï ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§π‡•Å‡§à: {e}")
    finally:
        if channel_id in indexing_status:
            del indexing_status[channel_id]
  
